// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { PostCompileData, PostCompileResponses, PostCompileErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<
  TData,
  ThrowOnError
> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Compile LaTeX template
 * Compiles a LaTeX template and returns a PDF
 */
export const postCompile = <ThrowOnError extends boolean = false>(options: Options<PostCompileData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).post<PostCompileResponses, PostCompileErrors, ThrowOnError>({
    url: '/compile',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};
